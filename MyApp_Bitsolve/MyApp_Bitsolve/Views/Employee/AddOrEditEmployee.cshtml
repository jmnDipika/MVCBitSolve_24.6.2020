@model BusinessEntities.EmployeeVM

@using (Html.BeginForm("AddOrEditEmployee", "Employee", FormMethod.Post, new { enctype = "multipart/form-data", id = "formEmp", onsubmit = "return Submit(this);" }))
{
    <div class="form-horizontal">

        @Html.ValidationSummary(true)

        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.EmpId)
            </div>
        </div>

        <div class="form-group row ">
            @Html.LabelFor(model => model.EmployeeNo, new { @class = "control-label col-md-2", @text = "Employee No" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.EmployeeNo, new { HtmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeNo, "", new { @class = "invalid-feedback" })
            </div>
            @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2", @text = "First Name" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.FirstName, new { HtmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "invalid-feedback" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2", @text = "Last Name" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.LastName, new { HtmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "invalid-feedback" })
            </div>
            @Html.LabelFor(model => model.DOB, new { @class = "control-label col-md-2", @text = "DOB" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.DOB, new { HtmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "invalid-feedback" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.DesignationId, new { @class = "control-label col-md-2", @text = "Designation" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.DesignationId, (IEnumerable<SelectListItem>)ViewBag.designation,
                "Select Designation", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DesignationId, "", new { @class = "invalid-feedback" })
            </div>
            @Html.LabelFor(model => model.DeptId, new { @class = "control-label col-md-2", @text = "Department" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.DeptId, (IEnumerable<SelectListItem>)ViewBag.dept, "Select Department", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DeptId, "", new { @class = "invalid-feedback" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNo, new { @class = "control-label col-md-2", @text = "MobileNo" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.MobileNo, new { HtmlAttributes = new { @class = "form-control", @minlength = "10", @maxlength = "10" } })
                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "invalid-feedback" })
            </div>
            @Html.LabelFor(model => model.Fax, new { @class = "control-label col-md-2", @text = "Fax" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Fax, new { HtmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "invalid-feedback" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2", @text = "Email" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Email, new { HtmlAttributes = new { @class = "form-control", @type = "email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "invalid-feedback" })
            </div>
            @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextAreaFor(model => model.Address, new { @class = "form-control", @text = "Address" })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "invalid-feedback" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageName, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <img src="@Url.Content("~/ImagesData/EmployeeImages/" + Model.ImageName)" id="ImageName"  style="height:100px;width:100px" />
                <input type="file" id="file" name="file" onchange="PreviewImage(this)" />
            </div>
            @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.CheckBox("IsActive", new { HtmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "invalid-feedback" })
            </div>

        </div>

        @if (Model.EmpId == 0 || Model.EmpId == null)
        {
            <div class="card">
                <br />
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-2", @text = "Username" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.UserName, new { HtmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "invalid-feedback" })
                    </div>
                    @Html.LabelFor(model => model.EmpPassword, new { @class = "control-label col-md-2", @text = "Password" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.EmpPassword, new { HtmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmpPassword, "", new { @class = "invalid-feedback" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label col-md-2", @text = "Confirm Password" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.ConfirmPassword, new { HtmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "invalid-feedback" })
                    </div>

                </div>
            </div>
        }
        <hr />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" id="btnList" class="btn btn-success float-right mr-2">Employee List</button>
                <button type="submit" class="btn btn-info float-right" style="margin-right: 10px"><i class="fa fa-plus mr-2"></i>Save</button>
                <button type="reset" class="btn btn-warning float-right" style="margin-right: 10px"><i class="fa fa-refresh" style="margin-right: 5px"></i>Reset</button>
            </div>
        </div>
    </div>
}
